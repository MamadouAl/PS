package AlgLin;

public class SysDiagonal extends SysLin {

	public SysDiagonal(Matrice m, Vecteur v) throws IrregularSysLinException {
		super(m, v);
	}

	/**
	 * Renvoie la résolution du système diagonal
	 */
	@Override
	public Vecteur resolution() throws IrregularSysLinException {
		Matrice matrice = getMatriceSystem();
		Vecteur res = new Vecteur(matrice.nbLigne());

		for (int i = 0; i < matrice.nbLigne(); i++) { // dx = b => x = b/d avec d!=0
			if (Math.abs(matrice.getCoeff(i, i)) < Matrice.EPSILON)
				throw new IrregularSysLinException("Le système diagonal est irrégulier.");

			res.remplacecoef(i, secondMembre.getCoeff(i) / matrice.getCoeff(i, i));
		}
		return res;
	}

	public static void main(String[] args) throws IrregularSysLinException {
		System.out.println("Test de la classe SysDiagonal");
		double tab[] = {4, 5, 6};
		double mat[][] = { { 3, 0, 0 }, { 0, 2, 0 }, { 0, 0, 1 } };
		Vecteur vecteurB = new Vecteur(tab);
		Matrice matriceA = new Matrice(mat);
		SysLin sys = new SysDiagonal(matriceA, vecteurB);
		Vecteur solutionX = sys.resolution();
		System.out.println("La solution est : " + solutionX);		
		
		//On prend le vecteur b et on le multiplie par -1
		Matrice _b = new Matrice(vecteurB.getTaille(), 1);
		for (int i = 0; i < vecteurB.getTaille(); i++) {
			_b.remplacecoef(i, 0, vecteurB.getCoeff(i));
			_b.remplacecoef(i, 0, -_b.getCoeff(i, 0));
		}
		
		Matrice resultat = Matrice.produit(matriceA, solutionX);
		System.out.println("Le résultat Ax : \n" + resultat);
		
		Matrice Ax_b = Matrice.addition(resultat, _b); // Ax - b
		Vecteur norme = new Vecteur(Ax_b.nbLigne());
		for (int i = 0; i < Ax_b.nbLigne(); i++) {
			norme.remplacecoef(i, Ax_b.getCoeff(i, 0));
		}

		// Test de la norme
		double normeL1 = Vecteur.normeL1(norme);
		if (normeL1 <= 0.0 || normeL1 > Matrice.EPSILON) {
			System.out.println("La norme du vecteur est nulle ou très petite");
		}
		double normeL2 = Vecteur.normeL2(norme);
		if (normeL2 <= 0.0 || normeL2 > Matrice.EPSILON) {
			System.out.println("La norme du vecteur est nulle ou très petite");
		}
		double normeLinfini = Vecteur.normeLinfini(norme);
		if (normeLinfini <= 0.0 || normeLinfini > Matrice.EPSILON) {
			System.out.println("La norme du vecteur est nulle ou petite");
		}
	}
}
