package AlgLin;

public class SysDiagonal extends SysLin {
	

	public SysDiagonal(Matrice m, Vecteur v) throws IrregularSysLinException {
		super(m, v);
	}
	
	/**
	 * Renvoie la résolution du système diagonal
	 */
	@Override
	public Vecteur resolution() throws IrregularSysLinException {
		Matrice matrice = getMatriceSystem();
		Vecteur res = new Vecteur(matrice.nbLigne());

		for(int i = 0; i < matrice.nbLigne(); i++) { // dx = b => x = b/d
			
			res.remplacecoef(i, secondMembre.getCoeff(i) / matrice.getCoef(i, i));
		}
		return res;
	}
	
	//public String toString() {
	//	return "Systeme diagonal\n" + super.toString();
	//}
	
	public static void main(String[] args) throws IrregularSysLinException {
		double tab[] = {1,2,4};
		Vecteur vecteur = new Vecteur(tab);
		
		double mat[][]= {{1,0, 0},{0,1, 0},{0,0,1}};
		Matrice matrice = new Matrice(mat);								//2x + 0y = 4
		SysLin sys = new SysDiagonal(matrice, vecteur);					//0x + 3y = 5

		Vecteur resolution = sys.resolution();
		System.out.println("resolution "+ resolution);
		
		Matrice v = new Matrice(vecteur.getTaille(), 1);
		for(int i = 0; i < vecteur.getTaille(); i++){
			v.remplacecoef(i, 0, vecteur.getCoeff(i));
			v.remplacecoef(i, 0, - v.getCoef(i, 0));
		}

		Matrice.produit(matrice, resolution);
		System.out.println("matrice " + matrice);
		
		Matrice resultat = Matrice.produit(matrice,resolution);
		//Matrice.verif_addition(resultat, v);
		Matrice resulatFinal = Matrice.addition(resultat, v);
		Vecteur norme = new Vecteur(resulatFinal.nbLigne());
		for(int i = 0; i < resulatFinal.nbLigne(); i++){
			norme.remplacecoef(i, resulatFinal.getCoef(i,0));
		}
		
	}

}
