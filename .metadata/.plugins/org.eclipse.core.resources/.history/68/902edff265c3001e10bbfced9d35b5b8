package AlgLin;

public class SysTriangSup extends SysLin {

	public SysTriangSup(Matrice m, Vecteur v) throws IrregularSysLinException {
		super(m, v);
	}

	@Override
	public Vecteur resolution() throws IrregularSysLinException {
		Matrice matrice = getMatriceSystem();
		Vecteur res = new Vecteur(matrice.nbLigne());

		for (int i = matrice.nbLigne() - 1; i >= 0; i--) {
			double sum = 0.0;
			for (int j = i + 1; j < matrice.nbLigne(); j++) {
				sum += matrice.getCoeff(i, j) * res.getCoeff(j);
			}
			if (Math.abs(matrice.getCoeff(i, i)) < Matrice.EPSILON)
				throw new IrregularSysLinException("Le système diagonal est irrégulier.");

			res.remplacecoef(i, (secondMembre.getCoeff(i) - sum) / matrice.getCoeff(i, i));
		}

		return res;
	}

	public static void main(String[] args) throws IrregularSysLinException {
		double mat[][] = { { 1, 2, 3 }, { 0, 6, 5 }, { 0, 0, 3 } };
		Matrice matrice = new Matrice(mat);
		Vecteur vecteur = new Vecteur(new double[] { 1, 2, 3 });
		SysTriangSup sys = new SysTriangSup(matrice, vecteur);

		Vecteur resolution = sys.resolution();
		System.out.println(resolution);
		Matrice resolu = new Matrice(resolution.getTaille(), 1);
		for (int i = 0; i < resolu.nbLigne(); i++) {
			resolu.remplacecoef(i, 0, resolution.getCoeff(i));
		}
		Matrice v = new Matrice(vecteur.getTaille(), 1);
		for (int i = 0; i < vecteur.getTaille(); i++) {
			v.remplacecoef(i, 0, vecteur.getCoeff(i));
			v.remplacecoef(i, 0, -v.getCoeff(i, 0));
		}

		Matrice resultat = Matrice.produit(matrice, resolu);
		Matrice resulatFinal = Matrice.addition(resultat, v);
		Vecteur norme = new Vecteur(resulatFinal.nbLigne());
		for (int i = 0; i < resulatFinal.nbLigne(); i++) {
			norme.remplacecoef(i, resulatFinal.getCoeff(i, 0));
		}
		// Test de la norme
		double resNorme1 = Vecteur.normeL1(norme);
		if (resNorme1 <= 0.0 || resNorme1 > Matrice.EPSILON) {
			System.out.println("La norme du vecteur est null ou très petite");
		}
		double resNorme2 = Vecteur.normeL2(norme);
		if (resNorme2 <= 0.0 || resNorme2 > Matrice.EPSILON) {
			System.out.println("La norme du vecteur est null ou très petite");
		}
		double resNormeInf = Vecteur.normeInfini(norme);
		if (resNormeInf <= 0.0 || resNormeInf > Matrice.EPSILON) {
			System.out.println("La norme du vecteur est null ou petite");
		}

	}

}
