package AlgLin;

public class SysDiagonal extends SysLin {
	

	public SysDiagonal(Matrice m, Vecteur v) throws IrregularSysLinException {
		super(m, v);
	}
	
	/**
	 * Renvoie la résolution du système diagonal
	 */
	@Override
	public Vecteur resolution() throws IrregularSysLinException {
		Matrice matrice = getMatriceSystem();
		Vecteur res = new Vecteur(matrice.nbLigne());

		for(int i = 0; i < matrice.nbLigne(); i++) { // dx = b => x = b/d avec d!=0
			if (Math.abs(matrice.getCoef(i, i)) < Matrice.EPSILON) 
                throw new IrregularSysLinException("Le système diagonal est irrégulier.");
            
			res.remplacecoef(i, secondMembre.getCoeff(i) / matrice.getCoef(i, i));
		}
		return res;
	}
	

	public static void main(String[] args) throws IrregularSysLinException {	
		double tab[] = {4, 5, 6};
		Vecteur vecteur = new Vecteur(tab);
		double mat[][]= {{1,0, 0},{0,1, 0},{0,0,1}};
		Matrice matrice = new Matrice(mat);								
		SysLin sys = new SysDiagonal(matrice, vecteur);				

		Vecteur resolution = sys.resolution();
		System.out.println(resolution);
		Matrice resolu = new Matrice(resolution.getTaille(), 1);
		for(int i = 0; i < resolu.nbLigne(); i++){
			resolu.remplacecoef(i, 0, resolution.getCoeff(i));
		}
		Matrice v = new Matrice(vecteur.getTaille(), 1);
		for(int i = 0; i < vecteur.getTaille(); i++){
			v.remplacecoef(i, 0, vecteur.getCoeff(i));
			v.remplacecoef(i, 0, - v.getCoef(i, 0));
		}

		//Matrice.verif_produit(matrice, resolu);
		Matrice resultat = Matrice.produit(matrice,resolu);
		//Matrice.verif_addition(resultat, v);
		Matrice resulatFinal = Matrice.addition(resultat, v);
		Vecteur norme = new Vecteur(resulatFinal.nbLigne());
		for(int i = 0; i < resulatFinal.nbLigne(); i++){
			norme.remplacecoef(i, resulatFinal.getCoef(i,0));
		}
		//Test de la norme
		
		double resNorme1 =	Vecteur.normeL1(norme);
		if(resNorme1 <= 0.0 || resNorme1 > Matrice.EPSILON){
			System.out.println("La norme du vecteur est null ou très petite");
		}
		double resNorme2 = Vecteur.normeL2(norme);
		if(resNorme2 <= 0.0 || resNorme2 > Matrice.EPSILON){
			System.out.println("La norme du vecteur est null ou très petite");
		}
		double resNormeInf = Vecteur.normeInfini(norme);
		if(resNormeInf <= 0.0 || resNormeInf > Matrice.EPSILON){
			System.out.println("La norme du vecteur est null ou petite");
		}
	}
}

