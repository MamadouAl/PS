package AlgLin;

public class SysTriangInfUnite extends SystTriangInf {

	public SysTriangInfUnite(Matrice m, Vecteur v) throws IrregularSysLinException {
		super(m, v);
		
		// Vérifier que les coefficients diagonaux sont égaux à 1
        for (int i = 0; i < m.nbLigne(); i++) {
            if (Math.abs(m.getCoeff(i, i) - 1.0) > Matrice.EPSILON) {
				throw new IrregularSysLinException("La diagonale n'est pas égale à 1.");
            }
        }
	}
        
    public static void main(String... args) throws IrregularSysLinException {
            double mat[][] = { {1, 0, 0 }, { 2, 1, 0 }, { 3, 4, 1 } };
            Matrice matriceA = new Matrice(mat);
            Vecteur vecteurA = new Vecteur(new double[] {1, 2, 3});
            
			SysTriangInfUnite sys = new SysTriangInfUnite(matriceA, vecteurA);
			Vecteur solutionX = sys.resolution();
			System.out.println("x = " + solutionX);

			// On prend le vecteur b et on le multiplie par -1
			Matrice _b = new Matrice(vecteurB.getTaille(), 1);
			for (int i = 0; i < vecteurB.getTaille(); i++) {
				_b.remplacecoef(i, 0, vecteurB.getCoeff(i));
				_b.remplacecoef(i, 0, -_b.getCoeff(i, 0));
			}

			Matrice Ax = Matrice.produit(matriceA, solutionX); // Ax
			System.out.println("Le résultat Ax : \n" + Ax);

			Matrice Ax_b = Matrice.addition(Ax, _b); // Ax - b
			System.out.println("Le résultat Ax - b : " + Ax_b);
			Vecteur norme = new Vecteur(Ax_b.nbLigne());
			for (int i = 0; i < Ax_b.nbLigne(); i++) {
				norme.remplacecoef(i, Ax_b.getCoeff(i, 0));
			}

			// Test de la norme
			double normeL1 = Vecteur.normeL1(norme);
			System.out.println("Norme L1 : " + normeL1);
			if (normeL1 <= 0.0 || normeL1 > Matrice.EPSILON) {
				System.out.println("=> La norme du vecteur est nulle ou très petite");
			}
			double normeL2 = Vecteur.normeL2(norme);
			System.out.println("Norme L2 : " + normeL2);
			if (normeL2 <= 0.0 || normeL2 > Matrice.EPSILON) {
				System.out.println("=> La norme du vecteur est nulle ou très petite");
			}
			double normeLinfini = Vecteur.normeLinfini(norme);
			System.out.println("Norme Linfini : " + normeLinfini);
			if (normeLinfini <= 0.0 || normeLinfini > Matrice.EPSILON) {
				System.out.println("=> La norme du vecteur est nulle ou très petite");
			}
			
    }
	}