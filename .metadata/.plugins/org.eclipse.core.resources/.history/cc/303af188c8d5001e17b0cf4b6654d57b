package AlgLin;

import java.util.Scanner;

public class HilbertMatrice extends Matrice {
    public HilbertMatrice(int ordre) {
        super(ordre, ordre);
        for (int i = 0; i < this.nbLigne(); i++) {
            for (int j = 0; j < this.nbColonne(); j++) {
                this.remplacecoef(i, j, 1.0 / (i + j + 1));
            }
        }
    }

    public static void main(String[] args) throws Exception {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Entrez l'ordre de la matrice de Hilbert : ");
        int ordre = scanner.nextInt();

        HilbertMatrice hilbertMatrice = new HilbertMatrice(ordre);
        System.out.println("Matrice de Hilbert :");
        System.out.println(hilbertMatrice.toString());
        Matrice matrice = new Matrice(hilbertMatrice.nbLigne(), hilbertMatrice.nbColonne());
        matrice.recopie(hilbertMatrice);

        // Calcul de l'inverse
        Matrice inverse = hilbertMatrice.inverse();
        System.out.println("Inverse de la matrice de Hilbert :");
        System.out.println(inverse.toString());

        // Vérification
        System.out.println("\nVérification *****************");
        Matrice produit = Matrice.produit(matrice, inverse); // A * A^-1
        System.out.println("Produit A * A^-1 ", produit.toString());
        Matrice identite = Matrice.identite(ordre);
		Matrice difference = Matrice.addition(produit, identite.produit(-1)); // A * A^-1 - I
		
		double norme1 = difference.norme_1();
		System.out.println("Norme 1 :" + norme1);
		if (norme1 < Matrice.EPSILON) {
			System.out.println("La norme 1 est nulle\n");
		} else {
			System.out.println("La norme 1 n'est pas nulle\n");
		}
		
        double normeInfini = difference.norme_inf();
        System.out.println("Norme infinie :" + normeInfini);
		if (normeInfini < Matrice.EPSILON) {
			System.out.println("La norme INFINI est nulle\n");
		} else {
			System.out.println("La norme INFINI n'est pas nulle\n");
		}

        // Calcul des conditionnements
        double cond_1 = inverse.cond_1();
        double cond_inf = inverse.cond_inf();
        System.out.println("Conditionnement de la matrice inversée (norme 1) : " + cond_1);
        System.out.println("Conditionnement de la matrice inversée (norme INFINI) : " + cond_inf);

        scanner.close();
    }
}
