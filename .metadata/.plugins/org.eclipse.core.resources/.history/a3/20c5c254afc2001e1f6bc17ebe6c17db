package AlgLin;

public class Helder extends SysLin {

    public Helder(Matrice m, Vecteur v) throws IrregularSysLinException {
        super(m, v);
    }

    public void factorLDR() throws IrregularSysLinException {
        SysTriangInfUnite L = new SysTriangInfUnite(matriceSystem, secondMembre);
        SysDiagonal D = new SysDiagonal(matriceSystem, L.resolution());
        SysTriangSupUnite R = new SysTriangSupUnite(matriceSystem, D.resolution());

        // Mettez à jour la matrice d'origine en fonction de la factorisation LDR
        matriceSystem = Matrice.produit(L.matriceSystem, Matrice.produit(D.matriceSystem, R.matriceSystem));
    }

    @Override
    public Vecteur resolution() throws IrregularSysLinException {
        factorLDR();
        return new SysTriangSupUnite(matriceSystem, getSecondMembre()).resolution();
    }

    /**
     * Résolution partielle en supposant que la matrice du système est déjà sous
     * forme factorisée et n'effectue que la résolution des systèmes élémentaires.
     */
    public Vecteur resolutionPartielle() throws IrregularSysLinException {
        return new SysTriangSupUnite(matriceSystem, getSecondMembre()).resolution();
    }

    public static void main(String[] args) throws IrregularSysLinException {
        double[][] tab = {{1, 1, -2}, {4, -2, 1}, {3, -1, 3}};
        Matrice mat2 = new Matrice(tab);
        Vecteur vec1 = new Vecteur(new double[] {3, 5, 8});
        Helder H = new Helder(mat2, vec1);

        System.out.println("Résultat de Ax = b : " + H.resolution());
    }
}
